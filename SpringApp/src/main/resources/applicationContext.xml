<?xml version="1.0" encoding="UTF-8"?>
<!-- This Is Declaration For Name-Space For Spring Framework & also define 
	custome namespace like Maulik-SpringApp -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:Maulik-SpringApp="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	Maulik-SpringApp:schemaLocation="http://www.springframework.org/schema/beans  
               http://www.springframework.org/schema/beans/spring-beans.xsd">

	<bean id="beanFactory_employee" class="com.example.springframework.model.Employee"
		name="beanFactory_employee1,beanFactory_employee2,beanFactory_employee3">
		<property name="id" value="001" />
	</bean>

	<bean id="beanFactory_employeeWithName" class="com.example.springframework.model.Employee"
		name="beanFactory_employeeWithName1,beanFactory_employeeWithName2">
		<property name="id" value="001" />
		<property name="name" value="Maulik" />
	</bean>


	<bean id="applicationContext_employeeWithName" class="com.example.springframework.model.Employee"
		name="applicationContext_employeeWithName1,applicationContext_employeeWithName2">
		<property name="id" value="002" />
		<property name="name" value="Parth" />
	</bean>

	<bean id="employeeStaticFactoryBeanDemo" class="com.example.springframework.model.EmployeeFactory"
		factory-method="getStaticEmployeeObject">
		<property name="id" value="003" />
		<property name="name" value="Krunal J Patel" />
	</bean>

	<bean id="employeeFactoryBeanDemo" class="com.example.springframework.model.EmployeeFactory">
	</bean>

	<bean id="employeeStaticFactoryInstanceBeanDemo" factory-method="getEmployeeObject"
		factory-bean="employeeFactoryBeanDemo">
		<property name="id" value="004" />
		<property name="name" value="Maulik J Patel" />
	</bean>

	<bean id="userEmptyConstructor" class="com.example.springframework.model.User">
	</bean>

	<bean id="userOneArgConstructor" class="com.example.springframework.model.User">
		<constructor-arg name="userId" value="user001">
		</constructor-arg>
	</bean>

	<bean id="userTwoConstructor" class="com.example.springframework.model.User">
		<constructor-arg name="userId" value="user001"></constructor-arg>
		<constructor-arg name="name" value="Patel Maulik J"></constructor-arg>
	</bean>

	<bean id="userSimpleSetterInjection" class="com.example.springframework.model.User">
		<property name="userId">
			<value>100</value>
		</property>
		<property name="age">
			<value>23</value>
		</property>
		<property name="name">
			<value>Patel Rahul D</value>
		</property>
		<property name="mobileNo">
			<value>9995459855</value>
		</property>
	</bean>

	<bean id="carBean" class="com.example.springframework.model.Car">
		<property name="color">
			<value>Red</value>
		</property>
		<property name="price">
			<value>250000.85</value>
		</property>
		<property name="modelName">
			<value>Maruti Suzuki</value>
		</property>
	</bean>

	<bean id="refBeanDemo" class="com.example.springframework.model.Vehicle">
		<property name="car">
			<ref bean="carBean" />
		</property>
	</bean>

	<bean id="innerBeanDemo" class="com.example.springframework.model.Vehicle">
		<property name="car">
			<bean class="com.example.springframework.model.Car">
				<property name="color" value="White" />
				<property name="price" value="400000" />
				<property name="modelName" value="Alto" />
			</bean>
		</property>
	</bean>

	<!-- Colletion Parent -->

	<bean id="collectionBeanAbstractDemo" class="com.example.springframework.model.CollectionBean"
		abstract="true">
		<property name="list">
			<list>
				<bean class="com.example.springframework.model.Car">
					<property name="color" value="Blue" />
					<property name="price" value="150000" />
					<property name="modelName" value="Nano" />
				</bean>
				<value>1</value>
				<value>1</value>
				<ref bean="innerBeanDemo" />
			</list>
		</property>
	</bean>

	<bean id="collectionBeanDemo" class="com.example.springframework.model.CollectionBean"
		parent="collectionBeanAbstractDemo">
		<property name="list">
			<list merge="true">
				<!-- <bean class="com.example.springframework.model.Car"> -->
				<!-- <property name="color" value="Blue" /> -->
				<!-- <property name="price" value="150000" /> -->
				<!-- <property name="modelName" value="Nano" /> -->
				<!-- </bean> -->
				<!-- <value>1</value> -->
				<!-- <value>1</value> -->
				<!-- <ref bean="innerBeanDemo" /> -->
			</list>
		</property>
		<property name="map">
			<map>
				<entry key="key1" value="key1Value"></entry>
				<entry key="key2" value-ref="innerBeanDemo"></entry>
				<entry key="key3">
					<bean class="com.example.springframework.model.Car">
						<property name="color" value="Yellow" />
						<property name="price" value="10000" />
						<property name="modelName" value="Nano" />
					</bean>
				</entry>
				<entry key-ref="innerBeanDemo" value="mapKeyWithReference" />
			</map>
		</property>
		<property name="set">
			<set>
				<value>1</value>
				<value>1</value>
				<bean class="com.example.springframework.model.Car">
					<property name="color" value="Blue" />
					<property name="price" value="150000" />
					<property name="modelName" value="Nano" />
				</bean>
				<ref bean="innerBeanDemo" />
			</set>
		</property>
		<property name="properties">
			<props>
				<prop key="administrator">administrator@example.com</prop>
				<prop key="support">support@example.com</prop>
			</props>
		</property>
	</bean>

</beans>